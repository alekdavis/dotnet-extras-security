<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>JsonExtensions.ToJson Method</title><meta name="Title" content="ToJson" /><meta name="Help.Id" content="Overload:DotNetExtras.Security.Json.JsonExtensions.ToJson" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="DotNetExtras.Security.Json" /><meta name="guid" content="Overload_DotNetExtras_Security_Json_JsonExtensions_ToJson" /><meta name="tocFile" content="../toc/IDACBB.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">DotNetExtras.Security Library Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><div id="HeaderPrelimContainer" class="level my-1 px-2"><div id="PreliminaryContainer" class="level-left"><div class="level-item"><span class="tag is-warning is-medium">This is preliminary documentation and is subject to change.</span></div></div></div><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Json<wbr />Extensions<span id="LST38261C0D_0" data-languageSpecificText="cpp=::|nu=."></span>To<wbr />Json Method</h1><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Overload List</h2><div id="IDACASection"><table id="OverloadList" class="table is-hoverable"><tr><td><a href="M_DotNetExtras_Security_Json_JsonExtensions_ToJson_19.htm">ToJson(Object, <span id="LST38261C0D_1" data-languageSpecificText="cpp=array&lt;"></span>String<span id="LST38261C0D_2" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Serializes any object to a non-indented JSON string 
            masking the specified properties 
            with the <span class="code">null</span> values.
            The resulting JSON string will 
            be non-indented, 
            use the <span class="code">camelCase</span> notation for property names, and
            exclude <span class="code">null</span> values.
            </td></tr><tr><td><a href="M_DotNetExtras_Security_Json_JsonExtensions_ToJson_2.htm">ToJson(Object, Boolean, <span id="LST38261C0D_3" data-languageSpecificText="cpp=array&lt;"></span>String<span id="LST38261C0D_4" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Serializes any object to a non-indented JSON string 
            masking the specified properties 
            with the <span class="code">null</span> values.
            The resulting JSON string will 
            use the <span class="code">camelCase</span> notation for property names, and
            exclude <span class="code">null</span> values.
            </td></tr><tr><td><a href="M_DotNetExtras_Security_Json_JsonExtensions_ToJson_14.htm">ToJson(Object, Char, <span id="LST38261C0D_5" data-languageSpecificText="cpp=array&lt;"></span>String<span id="LST38261C0D_6" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Serializes any object to a non-indented JSON string 
            masking the specified properties 
            using a mask character.
            The resulting JSON string will 
            be non-indented,
            use the <span class="code">camelCase</span> notation for property names, and
            exclude <span class="code">null</span> values.
            </td></tr><tr><td><a href="M_DotNetExtras_Security_Json_JsonExtensions_ToJson_18.htm">ToJson(Object, String, <span id="LST38261C0D_7" data-languageSpecificText="cpp=array&lt;"></span>String<span id="LST38261C0D_8" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Serializes any object to a non-indented JSON string 
            masking the specified properties 
            with a literal string or the <span class="code">null</span> values.
            The resulting JSON string will 
            be non-indented,
            use the <span class="code">camelCase</span> notation for property names, and
            exclude <span class="code">null</span> values.
            </td></tr><tr><td><a href="M_DotNetExtras_Security_Json_JsonExtensions_ToJson_1.htm">ToJson(Object, Boolean, Boolean, <span id="LST38261C0D_9" data-languageSpecificText="cpp=array&lt;"></span>String<span id="LST38261C0D_10" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Serializes any object to a non-indented JSON string 
            masking the specified properties 
            with the <span class="code">null</span> values.
            The resulting JSON string will 
            exclude <span class="code">null</span> values.
            </td></tr><tr><td><a href="M_DotNetExtras_Security_Json_JsonExtensions_ToJson_11.htm">ToJson(Object, Char, Boolean, <span id="LST38261C0D_11" data-languageSpecificText="cpp=array&lt;"></span>String<span id="LST38261C0D_12" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Serializes any object to a non-indented JSON string 
            masking the specified properties 
            using a mask character.
            The resulting JSON string will 
            use the <span class="code">camelCase</span> notation for property names, and
            exclude <span class="code">null</span> values.
            </td></tr><tr><td><a href="M_DotNetExtras_Security_Json_JsonExtensions_ToJson_13.htm">ToJson(Object, Char, Int32, <span id="LST38261C0D_13" data-languageSpecificText="cpp=array&lt;"></span>String<span id="LST38261C0D_14" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Serializes any object to a non-indented JSON string 
            masking the specified properties 
            using a mask character and keeping the specified number of characters
            in the beginning of the string in plain text.
            The resulting JSON string will 
            be non-indented,
            use the <span class="code">camelCase</span> notation for property names, and
            exclude <span class="code">null</span> values.
            </td></tr><tr><td><a href="M_DotNetExtras_Security_Json_JsonExtensions_ToJson_17.htm">ToJson(Object, String, Boolean, <span id="LST38261C0D_15" data-languageSpecificText="cpp=array&lt;"></span>String<span id="LST38261C0D_16" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Serializes any object to a non-indented JSON string 
            masking the specified properties 
            with a literal string or the <span class="code">null</span> values.
            The resulting JSON string will 
            use the <span class="code">camelCase</span> notation for property names, and
            exclude <span class="code">null</span> values.
            </td></tr><tr><td><a href="M_DotNetExtras_Security_Json_JsonExtensions_ToJson.htm">ToJson(Object, Boolean, Boolean, Boolean, <span id="LST38261C0D_17" data-languageSpecificText="cpp=array&lt;"></span>String<span id="LST38261C0D_18" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Serializes any object to a non-indented JSON string 
            masking the specified properties 
            with the <span class="code">null</span> values.
            </td></tr><tr><td><a href="M_DotNetExtras_Security_Json_JsonExtensions_ToJson_8.htm">ToJson(Object, Char, Boolean, Boolean, <span id="LST38261C0D_19" data-languageSpecificText="cpp=array&lt;"></span>String<span id="LST38261C0D_20" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Serializes any object to a non-indented JSON string 
            masking the specified properties 
            using a mask character.
            The resulting JSON string will 
            exclude <span class="code">null</span> values.
            </td></tr><tr><td><a href="M_DotNetExtras_Security_Json_JsonExtensions_ToJson_10.htm">ToJson(Object, Char, Boolean, Int32, <span id="LST38261C0D_21" data-languageSpecificText="cpp=array&lt;"></span>String<span id="LST38261C0D_22" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Serializes any object to a JSON string 
            masking the specified properties 
            using a mask character and keeping the specified number of characters
            in the beginning of the string in plain text.
            The resulting JSON string will 
            use the <span class="code">camelCase</span> notation for property names, and
            exclude <span class="code">null</span> values.
            </td></tr><tr><td><a href="M_DotNetExtras_Security_Json_JsonExtensions_ToJson_12.htm">ToJson(Object, Char, Int32, Int32, <span id="LST38261C0D_23" data-languageSpecificText="cpp=array&lt;"></span>String<span id="LST38261C0D_24" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Serializes any object to a non-indented JSON string 
            masking the specified properties 
            using a mask character and keeping the specified number of characters
            in the beginning and/or at the end of the string in plain text.
            The resulting JSON string will 
            be non-indented,
            use the <span class="code">camelCase</span> notation for property names, and
            exclude <span class="code">null</span> values.
            </td></tr><tr><td><a href="M_DotNetExtras_Security_Json_JsonExtensions_ToJson_16.htm">ToJson(Object, String, Boolean, Boolean, <span id="LST38261C0D_25" data-languageSpecificText="cpp=array&lt;"></span>String<span id="LST38261C0D_26" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Serializes any object to a non-indented JSON string 
            masking the specified properties 
            with a literal string or the <span class="code">null</span> values.
            The resulting JSON string will 
            exclude <span class="code">null</span> values.
            </td></tr><tr><td><a href="M_DotNetExtras_Security_Json_JsonExtensions_ToJson_5.htm">ToJson(Object, Char, Boolean, Boolean, Boolean, <span id="LST38261C0D_27" data-languageSpecificText="cpp=array&lt;"></span>String<span id="LST38261C0D_28" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Serializes any object to a non-indented JSON string 
            masking the specified properties 
            using a mask character.
            The resulting JSON string will 
            exclude <span class="code">null</span> values.
            </td></tr><tr><td><a href="M_DotNetExtras_Security_Json_JsonExtensions_ToJson_7.htm">ToJson(Object, Char, Boolean, Boolean, Int32, <span id="LST38261C0D_29" data-languageSpecificText="cpp=array&lt;"></span>String<span id="LST38261C0D_30" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Serializes any object to a JSON string 
            masking the specified properties 
            using a mask character and keeping the specified number of characters
            in the beginning of the string in plain text.
            The resulting JSON string will 
            exclude <span class="code">null</span> values.
            </td></tr><tr><td><a href="M_DotNetExtras_Security_Json_JsonExtensions_ToJson_9.htm">ToJson(Object, Char, Boolean, Int32, Int32, <span id="LST38261C0D_31" data-languageSpecificText="cpp=array&lt;"></span>String<span id="LST38261C0D_32" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Serializes any object to a non-indented JSON string 
            masking the specified properties 
            using a mask character and keeping the specified number of characters
            in the beginning and/or at the end of the string in plain text.
            The resulting JSON string will 
            use the <span class="code">camelCase</span> notation for property names, and
            exclude <span class="code">null</span> values.
            </td></tr><tr><td><a href="M_DotNetExtras_Security_Json_JsonExtensions_ToJson_15.htm">ToJson(Object, String, Boolean, Boolean, Boolean, <span id="LST38261C0D_33" data-languageSpecificText="cpp=array&lt;"></span>String<span id="LST38261C0D_34" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Serializes any object to a JSON string 
            masking the specified properties with 
            a literal string <span class="code">null</span> values.
            </td></tr><tr><td><a href="M_DotNetExtras_Security_Json_JsonExtensions_ToJson_4.htm">ToJson(Object, Char, Boolean, Boolean, Boolean, Int32, <span id="LST38261C0D_35" data-languageSpecificText="cpp=array&lt;"></span>String<span id="LST38261C0D_36" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Serializes any object to a JSON string 
            masking the specified properties 
            using a mask character and keeping the specified number of characters
            in the beginning of the string in plain text.
            </td></tr><tr><td><a href="M_DotNetExtras_Security_Json_JsonExtensions_ToJson_6.htm">ToJson(Object, Char, Boolean, Boolean, Int32, Int32, <span id="LST38261C0D_37" data-languageSpecificText="cpp=array&lt;"></span>String<span id="LST38261C0D_38" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Serializes any object to a non-indented JSON string 
            masking the specified properties 
            using a mask character and keeping the specified number of characters
            in the beginning and/or at the end of the string in plain text.
            The resulting JSON string will 
            exclude <span class="code">null</span> values.
            </td></tr><tr><td><a href="M_DotNetExtras_Security_Json_JsonExtensions_ToJson_3.htm">ToJson(Object, Char, Boolean, Boolean, Boolean, Int32, Int32, <span id="LST38261C0D_39" data-languageSpecificText="cpp=array&lt;"></span>String<span id="LST38261C0D_40" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Serializes any object to a JSON string 
            masking the specified properties 
            using a mask character and keeping the specified number of characters
            in the beginning and/or at the end of the string in plain text.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="T_DotNetExtras_Security_Json_JsonExtensions.htm">JsonExtensions Class</a></div><div><a href="N_DotNetExtras_Security_Json.htm">DotNetExtras.Security.Json Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Overload List</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p>Copyright © 2025 Alek Davis</p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:alek.davis%40gmail.com?Subject=DotNetExtras.Security%20Library%20Documentation">Alek Davis</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
});</script></body></html>